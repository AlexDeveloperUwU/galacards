<!DOCTYPE html>
<html lang="es">
<%- include('components/head') %>

<link rel="stylesheet" href="/public/css/vid.css">

<body class="min-h-screen p-6 md:p-8 flex flex-col items-center justify-center">
  <video id="background-video" autoplay muted loop playbackRate="0.5">
    <source src="/public/vids/bg.webm" type="video/webm">
    Tu navegador no soporta el elemento de video.
  </video>

  <h1 class="text-5xl md:text-6xl text-white font-bold mb-10 animate-glow tracking-wider">¿Quién soy?</h1>

  <div class="w-full max-w-7xl mx-auto rounded-2xl shadow-2xl overflow-hidden backdrop-blur-sm bg-opacity-90 bg-purple-bg">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 md:gap-6 p-6 md:p-8 bg-purple-bg">

      <div class="w-full flex flex-col items-center">
        <span id="cardName1" class="text-white text-lg font-bold mb-2 animate-glow">Foto random 1</span>
        <div class="w-full h-0 pb-[133.33%] relative">
          <div id="cardContainer1" class="absolute inset-0 rounded-2xl bg-purple-card border-2 border-purple-light shadow-card transition-all duration-300 flex items-center justify-center transform">
            <span class="text-7xl font-bold text-white opacity-90">1</span>
          </div>
        </div>
      </div>

      <div class="w-full flex flex-col items-center">
        <span id="cardName2" class="text-white text-lg font-bold mb-2 animate-glow">Miau?</span>
        <div class="w-full h-0 pb-[133.33%] relative">
          <div id="cardContainer2" class="absolute inset-0 rounded-2xl bg-purple-card border-2 border-purple-light shadow-card transition-all duration-300 flex items-center justify-center transform">
            <span class="text-7xl font-bold text-white opacity-90">2</span>
          </div>
        </div>
      </div>

      <div class="w-full flex flex-col items-center">
        <span id="cardName3" class="text-white text-lg font-bold mb-2 animate-glow">Otro vtuber más</span>
        <div class="w-full h-0 pb-[133.33%] relative">
          <div id="cardContainer3" class="absolute inset-0 rounded-2xl bg-purple-card border-2 border-purple-light shadow-card transition-all duration-300 flex items-center justify-center transform">
            <span class="text-7xl font-bold text-white opacity-90">3</span>
          </div>
        </div>
      </div>

      <div class="w-full flex flex-col items-center">
        <span id="cardName4" class="text-white text-lg font-bold mb-2 animate-glow">Good luck guessing!</span>
        <div class="w-full h-0 pb-[133.33%] relative">
          <div id="cardContainer4" class="absolute inset-0 rounded-2xl bg-purple-card border-2 border-purple-light shadow-card transition-all duration-300 flex items-center justify-center transform">
            <span class="text-7xl font-bold text-white opacity-90">4</span>
          </div>
        </div>
      </div>

      <div class="w-full flex flex-col items-center">
        <span class="text-transparent text-lg font-bold mb-2">&nbsp;</span>
        <div class="w-full h-0 pb-[133.33%] relative">
          <div class="absolute inset-0 rounded-2xl bg-purple-medium border-2 border-purple-light shadow-card flex flex-col items-center justify-center p-6">
            <h3 class="text-2xl text-purple-light font-bold mb-6 border-b-2 border-purple-light pb-2 w-full text-center">Stats</h3>
            <div class="text-center space-y-4 w-full">
              <div class="bg-purple-bg bg-opacity-50 rounded-lg p-3">
                <p class="text-white">Restante: <span class="font-bold text-purple-light" id="avaliableCards">0</span></p>
              </div>
              <div class="bg-purple-bg bg-opacity-50 rounded-lg p-3">
                <p class="text-white">Ronda: <span class="font-bold text-purple-light" id="roundNumber">0</span></p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="w-full flex flex-col items-center">
        <div class="w-full h-0 pb-[133.33%] relative">
          <iframe class="absolute inset-0 w-full h-full rounded-2xl border-2 border-purple-light shadow-card hover:shadow-glow transition-all duration-300 transform hover:scale-[1.02] cursor-pointer" style="background-color: transparent;" src="" id="player1iframe"></iframe>
        </div>
        <span id="playerName1" class="text-white text-lg font-bold animate-glow mt-2">Nya</span>
      </div>

      <div class="w-full flex flex-col items-center">
        <div class="w-full h-0 pb-[133.33%] relative">
          <iframe class="absolute inset-0 w-full h-full rounded-2xl border-2 border-purple-light shadow-card hover:shadow-glow transition-all duration-300 transform hover:scale-[1.02] cursor-pointer" style="background-color: transparent;" src="" id="player2iframe"></iframe>
        </div>
        <span id="playerName2" class="text-white text-lg font-bold animate-glow mt-2">Tramposo/a</span>
      </div>

      <div class="w-full flex flex-col items-center">
        <div class="w-full h-0 pb-[133.33%] relative">
          <iframe class="absolute inset-0 w-full h-full rounded-2xl border-2 border-purple-light shadow-card hover:shadow-glow transition-all duration-300 transform hover:scale-[1.02] cursor-pointer" style="background-color: transparent;" src="" id="player3iframe"></iframe>
        </div>
        <span id="playerName3" class="text-white text-lg font-bold animate-glow mt-2">Quién vive en la</span>
      </div>

      <div class="w-full flex flex-col items-center">
        <div class="w-full h-0 pb-[133.33%] relative">
          <iframe class="absolute inset-0 w-full h-full rounded-2xl border-2 border-purple-light shadow-card hover:shadow-glow transition-all duration-300 transform hover:scale-[1.02] cursor-pointer" style="background-color: transparent;" src="" id="player4iframe"></iframe>
        </div>
        <span id="playerName4" class="text-white text-lg font-bold animate-glow mt-2">piña bajo el mar?</span>
      </div>

      <div class="w-full flex flex-col items-center">
        <div class="w-full h-0 pb-[133.33%] relative">
          <div class="absolute inset-0 rounded-2xl bg-purple-medium border-2 border-purple-light shadow-card flex flex-col items-center justify-center p-6">
            <h3 class="text-2xl text-purple-light font-bold mb-6 border-b-2 border-purple-light pb-2 w-full text-center">Controles</h3>
            <div class="space-y-3 w-full">
              <button class="w-full py-3 bg-purple-light text-purple-dark text-base font-bold rounded-lg hover:bg-purple-hover transition-colors duration-300 shadow-md transform hover:translate-y-[-2px]" id="changingGameButton">
                ¡Girar!
              </button>
              <button id="getPlayerLinks" class="w-full py-3 bg-purple-light text-purple-dark text-base font-bold rounded-lg hover:bg-purple-hover transition-colors duration-300 shadow-md transform hover:translate-y-[-2px]">
                Obtener links
              </button>
            </div>
          </div>
        </div>
        <span class="text-transparent text-lg font-bold mt-2">&nbsp;</span>
      </div>
    </div>
  </div>

  <script>
    document.getElementById('background-video').playbackRate = 0.5;

    const queryParams = new URLSearchParams(window.location.search);
    const playerId = queryParams.get('id');

    const socket = io(window.location.host, {
      auth: {
        id: playerId
      }
    });

    socket.on('connect', () => {
      console.log('Conectado al servidor con ID:', playerId);
      socket.emit('getPlayerData');
    });

    socket.on('connect_error', (err) => {
      console.error('Error de conexión:', err.message);
    });

    let hostId = null;

    socket.on('disconnect', () => {
      console.log('Desconectado del servidor');
    });

    socket.on("playerData", (players) => {
      console.log("Recibido playerData:", players);
      if (players.length > 0) {
        hostId = players[0]?.id;

        if (players[0]?.name === "Host") {
          Swal.fire({
            title: 'Escribe tu nombre :D',
            input: 'text',
            inputAttributes: {
              maxlength: 20,
              autocapitalize: 'off',
              autocorrect: 'off',
              style: 'text-align: center; font-size: 1rem; padding: 0.5rem; border-radius: 0.5rem; border: 2px solid #8b458b; background-color: #6a2c70; color: white; box-shadow: 0 0 10px #8b458b;'
            },
            allowOutsideClick: false,
            allowEscapeKey: false,
            showCancelButton: false,
            confirmButtonText: 'Yep, esa persona soy yo!',
            customClass: {
              popup: 'bg-[#8b458b] rounded-2xl p-6 shadow-2xl w-[90%] max-w-md',
              title: 'text-3xl text-white font-bold mb-4 text-center',
              input: 'text-purple-dark text-lg font-bold p-2 rounded-lg border-2 border-purple-light',
              confirmButton: 'mt-4 w-full py-2 bg-purple-light text-purple-dark text-base font-bold rounded-lg hover:bg-purple-hover transition-colors duration-300 shadow-md',
            },
            preConfirm: (name) => {
              if (!name || name.trim().length === 0) {
                Swal.showValidationMessage('El nombre no puede estar vacío');
                return false;
              }
              if (name.length > 20) {
                Swal.showValidationMessage('El nombre no puede tener más de 20 caracteres');
                return false;
              }
              return name.trim();
            }
          }).then((result) => {
            if (result.isConfirmed) {
              socket.emit("savePlayerName", {
                playerId: hostId,
                name: result.value
              });
            }
          });
        }

        // Procesar los jugadores (excluyendo al host)
        players.slice(1).forEach((player, index) => {
          const playerName = document.getElementById(`playerName${index + 1}`);
          const playerIframe = document.getElementById(`player${index + 1}iframe`);

          if (playerName && playerIframe) {
            playerName.innerText = player.name;
            playerIframe.src = `https://vdo.ninja/?view=${player.id}&bitrate=10000&aspectratio=0.75167&autoplay=1&controls=0&muted=1&noaudio=1`;
          }
        });
      }
    });

    socket.on("savePlayerName", async (data) => {
      const {
        playerId,
        name
      } = data;
      await savePlayerName(playerId, name);
      sendPlayerData(socket);
    });

    socket.on('playerLinks', (players) => {
      const contentHtml = players.map(player => {
        if (player.name === players[0]?.name) {
          return `
            <div class="bg-purple-bg bg-opacity-94 rounded-lg p-3">
              <p class="text-white">Nombre: <span class="font-bold text-purple-light">${player.name}</span></p>
              <button class="mt-2 w-full py-2 bg-purple-light text-purple-dark text-sm font-bold rounded-lg transition-colors duration-300 shadow-md copy-link" data-vdo-url="${player.vdoUrl}">
                Copiar enlace
              </button>
            </div>
          `;
        } else {
          return `
            <div class="bg-purple-bg bg-opacity-94 rounded-lg p-3">
              <p class="text-white">Nombre: <span class="font-bold text-purple-light">${player.name}</span></p>
              <button class="mt-2 w-full py-2 bg-purple-light text-purple-dark text-sm font-bold rounded-lg transition-colors duration-300 shadow-md copy-link" data-game-url="${player.playerUrl}" data-vdo-url="${player.vdoUrl}">
                Copiar mensaje
              </button>
            </div>
          `;
        }
      }).join('');

      Swal.fire({
        title: 'Info jugadores',
        html: contentHtml,
        customClass: {
          popup: 'bg-[#8b458b] rounded-2xl p-6 shadow-2xl w-[30%]',
          title: 'text-3xl text-white font-bold mb-4 text-center',
          htmlContainer: 'space-y-4',
          confirmButton: 'mt-4 w-[100%] mx-auto py-2 bg-purple-light text-purple-dark text-base font-bold rounded-lg transition-colors duration-300 shadow-md'
        },
        showConfirmButton: true,
        confirmButtonText: 'Cerrar',
        didOpen: () => {
          document.querySelectorAll('.copy-link').forEach(button => {
            button.addEventListener('click', () => {
              const vdoUrl = button.getAttribute('data-vdo-url');
              const gameUrl = button.getAttribute('data-game-url');
              const isHost = !gameUrl;
              const message = isHost ?
                vdoUrl :
                `Hola! Te envío los enlaces que debes usar para jugar al juego ^^\n\nVDO.Ninja: ${vdoUrl}\nWeb Juego: ${gameUrl}\n\nEste mensaje es automatizado btw :p`;

              navigator.clipboard.writeText(message).then(() => {
                button.classList.add('bg-green-500', 'text-white');
                setTimeout(() => button.classList.remove('bg-green-500', 'text-white'), 1000);
              });
            });
          });
        }
      });
    });

    document.getElementById("getPlayerLinks").addEventListener("click", () => {
      socket.emit("getPlayerLinks");
    });

    document.getElementById("changingGameButton").addEventListener("click", () => {
      const button = document.getElementById("changingGameButton");

      if (button.textContent === "Reset") {
        socket.emit("resetImageLists");
        button.textContent = "¡Girar!";
        button.disabled = false;
        button.classList.remove("disabled");
      } else {
        socket.off("spinResult");

        socket.on("spinResult", (data) => {
          if (data.error) {
            console.error(data.error);
            return;
          }

          const {
            spinData,
            selectedImages,
            hasMoreRounds
          } = data;
          console.log("Spin data:", spinData);
          console.log("Selected images:", selectedImages);
          console.log("Has more rounds:", hasMoreRounds);

          spinData.forEach((reelData, index) => {
            console.log(`Jugador ${index + 1}:`, reelData);
          });

          if (!hasMoreRounds) {
            button.textContent = "Reset";
            button.disabled = false;
          }
        });

        socket.emit("spin");
      }
    });

    socket.on("resetComplete", () => {
      console.log("Juego reseteado. Listo para empezar de nuevo.");
    });
  </script>

  <%- include('components/scripts') %>
</body>

</html>